{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-8671528"
		},
		"airbnb_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"airbnb\""
		},
		"dw_airbnb_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"dw_airbnb\""
		},
		"dw_airbnb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-8671528.database.windows.net"
		},
		"dw_airbnb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw_airbnb"
		},
		"dw_airbnb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ucbsqladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/airbnb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('airbnb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_airbnb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('dw_airbnb_properties_typeProperties_server')]",
					"database": "[parameters('dw_airbnb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('dw_airbnb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('dw_airbnb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aemf1_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "airbnb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Day",
						"type": "String"
					},
					{
						"name": "Room Type",
						"type": "String"
					},
					{
						"name": "Shared Room",
						"type": "String"
					},
					{
						"name": "Private Room",
						"type": "String"
					},
					{
						"name": "Person Capacity",
						"type": "String"
					},
					{
						"name": "Superhost",
						"type": "String"
					},
					{
						"name": "Multiple Rooms",
						"type": "String"
					},
					{
						"name": "Business",
						"type": "String"
					},
					{
						"name": "Cleanliness Rating",
						"type": "String"
					},
					{
						"name": "Guest Satisfaction",
						"type": "String"
					},
					{
						"name": "Bedrooms",
						"type": "String"
					},
					{
						"name": "City Center (km)",
						"type": "String"
					},
					{
						"name": "Metro Distance (km)",
						"type": "String"
					},
					{
						"name": "Attraction Index",
						"type": "String"
					},
					{
						"name": "Normalised Attraction Index",
						"type": "String"
					},
					{
						"name": "Restraunt Index",
						"type": "String"
					},
					{
						"name": "Normalised Restraunt Index",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_city')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CITY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_city"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_day')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DAY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DAY_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_DAY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_hechos_airbnb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HECHOS_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICE",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "CITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DAY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ROOM_TYPE_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HOST_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LOCATION_ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HECHOS_AIRBNB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_host')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HOST_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SUPERHOST",
						"type": "bit"
					},
					{
						"name": "MULTIPLE_ROOMS",
						"type": "bit"
					},
					{
						"name": "BUSINESS",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_HOST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LOCATION_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CITY_CENTER_KM",
						"type": "decimal",
						"precision": 5,
						"scale": 3
					},
					{
						"name": "METRO_DISTANCE_KM",
						"type": "decimal",
						"precision": 5,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_LOCATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_room_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_airbnb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROOM_TYPE_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ROOM_TYPE",
						"type": "varchar"
					},
					{
						"name": "PERSON_CAPACITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BEDROOMS",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_ROOM_TYPE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_airbnb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_city')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Aemf1_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_city",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "sort1",
							"description": "Se estan agregando las filas segun las columnas \"City:"
						},
						{
							"name": "aggregate1",
							"description": "Agregación de datos por \"City\" que genera las columnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          Price as string,",
						"          Day as string,",
						"          {Room Type} as string,",
						"          {Shared Room} as string,",
						"          {Private Room} as string,",
						"          {Person Capacity} as string,",
						"          Superhost as string,",
						"          {Multiple Rooms} as string,",
						"          Business as string,",
						"          {Cleanliness Rating} as string,",
						"          {Guest Satisfaction} as string,",
						"          Bedrooms as string,",
						"          {City Center (km)} as string,",
						"          {Metro Distance (km)} as string,",
						"          {Attraction Index} as string,",
						"          {Normalised Attraction Index} as string,",
						"          {Restraunt Index} as string,",
						"          {Normalised Restraunt Index} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          City,",
						"          Price,",
						"          Day,",
						"          {Room Type},",
						"          {Shared Room},",
						"          {Private Room},",
						"          {Person Capacity},",
						"          Superhost,",
						"          {Multiple Rooms},",
						"          Business,",
						"          {Cleanliness Rating},",
						"          {Guest Satisfaction},",
						"          Bedrooms,",
						"          {City Center (km)},",
						"          {Metro Distance (km)},",
						"          {Attraction Index},",
						"          {Normalised Attraction Index},",
						"          {Restraunt Index},",
						"          {Normalised Restraunt Index}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(asc(City, true)) ~> sort1",
						"sort1 aggregate(groupBy(City),",
						"     Total = count()) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CITY_ID as integer,",
						"          CITY as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CITY_ID = Total,",
						"          CITY = City",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Aemf1_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_city')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dim_city')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_city",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_city')]"
			]
		}
	]
}